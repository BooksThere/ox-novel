#+TITLE: ox-novel instructions
#+SUBTITLE: Translated by Google Translate with help from Tim O'Callaghan
#+AUTHOR: Honda there

* NOTE: 2017-09-18 (TOC)
  This is the first attempt at a translation, so be amazed if it makes any sense.

* NOTE: 2017/02/17

In the future, since we will shift to using LuaTeX-ja, big changes will be made.

Although I'd like to adjust paper sizes and columns, first of all I will concentrate on changing the format of tex codes to be output in order to handle conversion to PDF by lualatex.

* What does ox-novel do?
  If you write a novel in Org-mode you can generate a PDF of A5 size vertical writing 2 columns with 1 command.

* How to use ox-novel
** Preparation

*** Prepare ox-novel.el in spacemacs

    then follow the instructions below.


*** Prepare ox-novel.el in emacs

    If you are using =spacemacs=, you can append it to the additional packages list:

    #+BEGIN_SRC emacs-lisp
    dotspacemacs-additional-packages '(
                                      (ox-novel :location (recipe :fetcher github :repo "timoc/ox-novel")))

    #+END_SRC
    if you are using your own emacs, then put =ox-novel.el= in a loadable place from Emacs and where it is loaded at startup, such as =init.el=

    then make sure it is loaded when org is loaded with:

    #+BEGIN_SRC emacs-lisp
    ;;;;;;;;;;;;;;;;;;;;;;
    (with-eval-after-load 'org
      (require 'ox-novel))
    #+END_SRC

*** Enable to use uplatex.
    What you need is
    - =uplatex=
    - =dvipdfmx=
    It is to be able to use the command called.

    I prepared the environment using Mac [[http://www2.kumagaku.ac.jp/teacher/herogw/] [Drag & Drop UpTeX]].
    I am not trying in other environments. I'm sorry.

** Usage
   1. Write a novel in Org-mode. See the sample below for how to write.
   2. With the file open, enter =C-c C-e n o=.
   3. pdf is exported and opens in parallel (=C-c C-e n p= if you do not want to open it).

** Recommended setting

*** Turn off word wrap function
    =word-wrap= to =nil= is recommended.
    Let's add the following wording around to =init.el=

    #+BEGIN_SRC emacs-lisp
      (setq word-wrap nil)
    #+END_SRC

    Why, I think that you can understand by turning on / off  =word-wrap=.

    Due to the nature of Emacs, when the word wrap function is on, wrapping on long line display,
    It will be done once in the space (or tab) at the beginning of the sentence.

    For example, I would like a sentence to be displayed as follows

    #+BEGIN_SRC org
        Due to the nature of Emacs, when the word wrap function is on, folding on long lines of display
      Return will be made once in the space (or tab) at the beginning of the sentence
      It is from.
    #+END_SRC

    It will be displayed as follows.

    #+BEGIN_SRC org

      Due to the nature of Emacs, when the word wrap function is on, folding on long lines
      But will it be done once in the space (or tab) at the beginning of the sentence
      It is.
    #+END_SRC

    The first line (what it sees) is blank and does not even contain line feed characters, which is very troublesome.

* sample
** =sample.org=
   I write it like this. Setting of title and author's name is like ordinary org-mode feeling.
   #+BEGIN_SRC org
     , #+TITLE: Sample: sample novel
     , #+SUBTITLE: What kind of PDF will be the novel written in Org?
     , #+AUTHOR: Honda there
     , #+PUBLISHER: Somewhat
     , #+PUBLISHED: April 12, Heisei 28
     , #+EDITION: first edition
     , #+OPTIONS: toc: 0 size: small sec-prefix: "*"

     ,* chapter One
       Starting * Chapter 1 * from this.

     , ** Section 1

        Sample text.

     , ** Section 2

        Sample text part 2.

     ,* Chapter II

       From now on the second chapter.

     , ** Section 1

        In this way it is also possible to shake ruby ​​on [[kanji] [kanji]].
   #+END_SRC

** =sample.pdf=
   The title page and the impression are horizontal writing. This is my hobby.

   I would like to be able to select portrait / sideways someday, but the priority is low. I'm sorry.

   [[file: ./ sample.pdf]]

* Writing
  Basically it's an ordinary Org-mode, but character decoration is for now
  - bold
  - verbatim
  Only two kinds are supported. Increase accordingly.
  I'd like to have a point, but I am worrying what to do about notation. I do not want to add a new notation to Org-mode, because it seems to be a big work.

  I will do it quite a bit about other writing styles.
  I will write about Rubi swing for the time being.
** Ruby swing

   #+BEGIN_SRC
     [[Kana] [Kana]]
   #+END_SRC

   Rubi will swing if you write it.

   If the Org-mode setting is still in the initial state, _ pseudonym _ is displayed at the time of editing.
   Rubi waved by mouse over pop up so it's convenient to say convenient.

   But since ruby ​​editing is a little troublesome,
   If necessary, it can be displayed as it was written as follows.

   #+BEGIN_SRC emacs-lisp
     (org-toggle-link-display)
   #+END_SRC
   It is possible to switch between parenthesized display and abbreviated display,
   #+BEGIN_SRC emacs-lisp
     (setq org-descriptive-links nil)
   #+END_SRC
   If you do, you will be in parenthesized display from whatever state you are in.

   =org-toggle-link-display= can be executed as =M-x org-toggle-link-display=
   Is it easy to handle?

   Other == .org= It will be reflected even when editing the file, so please do it yourself.

* Items that can be set
  (In most cases) file at the beginning of the file =#+hoge= type.

** Title =#+TITLE:=

   Set the title of the book.
   If not specified, the file name will be used, so let's set it up.

   It protrudes for a long time. Because of my LaTeX power problem, automatic line feed is not done.

** Subtitle =#+SUBTITLE:=

   It is displayed on both the title page and the imprint.
   Both are displayed slightly smaller than the title.
   If you do not set it, no blanks will remain, so you like whether or not you like it.

   Like the title, no line feed is done. Please take care.

** Author name =#+AUTHOR:=

   =#+Author Name can be described after:=. This will be displayed on the title page and in the imprint.
   If not specified, the default user name will be used, so be careful when using P. N. and it separately.

** Publisher =#+PUBLISHER:=
   Setting of publisher. For example, please use it for circle names.

** Contact address =#+ADDRESS:=
   That name is exactly as it is. Because it does not correspond to line feed, please short short.

** Issue date =#+PUBLISHED:=
   It is the date of issue.
   Since format is not specified in particular, how to write is free.

   Information on what version is available can be set separately.

** Edition =#+EDITION:=
   It is a good feeling to set information on what version it is.
   This also has no format. Freely.

** Printing source =#+PRINTER:=

   Sets where to print or was done.
   Imprint is printed in the form of "print hoge".

** Other, =#+What can be specified with OPTIONS:=

*** Table of Contents Generated / Unnecessary =toc=
    =toc: 1= etc, a table of contents is generated.
    For now it is only meaningful =nil=, 0, 1.
    Even if you set a number greater than 1, it looks the same as 1.

    The default value is =nil= and no table of contents.
    You can specify 0 when creating the table of contents of chapter only.
*** Character size =size=
    =small=, =normal=, =large= can be chosen.
    The default value is =normal=.
*** Clause name =prefix=
    Common characters can be added to the beginning of each clause.

    As a common usage,
    Is it making the clause name empty string to make * a common prefix?

    Please be aware that single-byte spaces can not be used due to Org-mode option specifications.
* TIPS
** Split files using include feature
   Org-mode can include another =.org= file with =#+INCLUDE:=.

   When exporting, since the contents of those files are inserted and processed,
   For example, if you divide files into chapters and write them as =#+INCLUDE:=,
   It makes me feel like I can reduce the size per file.

   Like this.
   #+BEGIN_SRC org
     , #+TITLE: Include Sample
     , #+AUTHOR: Honda there
     , #+PUBLISHED: 2016/04/12

     , #+INCLUDE: "prelude.org": minlevel 1
     , #+INCLUDE: "chapter 1 .org": minlevel 1
     , #+INCLUDE: "chapter2.org": minlevel 1
     , #+INCLUDE: "afterword.org": minlevel 1
   #+END_SRC

   =: minlevel = option to specify the headline level of the file to include.
   If you do not know the meaning, the file of each chapter starts with =* chapter name=
   =: minlevel 1 = should be specified.

   This is an original option in Org-mode, so if you examine it, information will come up.
